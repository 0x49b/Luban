# http://www.appveyor.com/docs/appveyor-yml

version: "{build}-{branch}"

cache:
  - '%APPDATA%\npm-cache'
  - '%USERPROFILE%\.electron'

init:
  - git --version
  - git config --global core.autocrlf false
  - git config --global user.name "AppVeyor"
  - git config --global user.email "appveyor@ci.appveyor.com"
  - go version
  - go env

environment:
  matrix:
  - nodejs_version: "4"
  - nodejs_version: "5"
  global:
    GOPATH: c:\gopath
    GITHUB_TOKEN:
      secure: 2E6+EjsBQq8Fp5aZzJVyf9LmSC1vfjzxUIYnIZdhNLn5EXk65zMrKewVTJFKPUV0

platform:
  - x86
  - x64

install:
  - ps: |
      Write-Host "Build directory: " -NoNewLine
      Write-Host $env:APPVEYOR_BUILD_FOLDER -ForegroundColor "Green"
      Write-Host "Build number: " -NoNewLine
      Write-Host $env:APPVEYOR_BUILD_NUMBER -ForegroundColor "Green"
      Write-Host "Branch: " -NoNewLine
      Write-Host $env:APPVEYOR_REPO_BRANCH -ForegroundColor "Green"
      Write-Host "Tag: " -NoNewLine
      Write-Host $env:APPVEYOR_REPO_TAG_NAME -ForegroundColor "Green"
      Write-Host "Commit: " -NoNewLine
      Write-Host $env:APPVEYOR_REPO_COMMIT -ForegroundColor "Green"
      Write-Host "Commit timestamp: " -NoNewLine
      Write-Host $env:APPVEYOR_REPO_COMMIT_TIMESTAMP -ForegroundColor "Green"
  - set PATH=%GOPATH%\bin;%PATH%
  - go get github.com/cheton/github-release
  - github-release --version
  - ps: Install-Product node $env:nodejs_version $env:platform
  - npm install -g npm
  - npm install
  - node --version
  - npm --version

build_script:
  - ps: |
      if ($env:APPVEYOR_REPO_TAG -eq 'false' -or $env:APPVEYOR_REPO_TAG -eq 'False') {
        npm run build-latest
      }
      else {
        npm run build
      }

deploy_script:
  - ps: mkdir releases
  - ps: $PACKAGE_NAME = bash -c 'scripts/package-name.sh src/package.json'
  - ps: $PACKAGE_VERSION = bash -c 'scripts/package-version.sh src/package.json'
  - ps: $env:RELEASE = "${PACKAGE_NAME}-${PACKAGE_VERSION}"
  - ps: $env:COMMIT_LOG = git log -1 --date=iso
  - ps: echo $env:RELEASE
  - ps: echo $env:COMMIT_LOG
  - ps: |
      if ($env:nodejs_version -eq '4' -And $env:platform -eq 'x86') {
        npm run electron-builder:win32-ia32
        Get-ChildItem output\win
        Copy-Item "output\win\${PACKAGE_NAME}Setup-${PACKAGE_VERSION}-ia32.exe" "releases\${env:RELEASE}-win32-ia32.exe"
        Get-ChildItem releases
        if ($env:APPVEYOR_REPO_TAG -eq 'false' -or $env:APPVEYOR_REPO_TAG -eq 'False') {
            node_modules/.bin/babel-node github-release.js --user=cheton --repo=cnc --tag="${env:APPVEYOR_REPO_BRANCH}" --name="${env:APPVEYOR_REPO_BRANCH}" --body="${env:COMMIT_LOG}" "releases/${env:RELEASE}-win32-ia32.exe"
        }
      }
  - ps: |
      if ($env:nodejs_version -eq '4' -And $env:platform -eq 'x64') {
        npm run electron-builder:win32-x64
        Get-ChildItem output\win-x64
        Copy-Item "output\win-x64\${PACKAGE_NAME}Setup-${PACKAGE_VERSION}.exe" "releases\${env:RELEASE}-win32-x64.exe"
        Get-ChildItem releases
        if ($env:APPVEYOR_REPO_TAG -eq 'false' -or $env:APPVEYOR_REPO_TAG -eq 'False') {
            node_modules/.bin/babel-node github-release.js --user=cheton --repo=cnc --tag="${env:APPVEYOR_REPO_BRANCH}" --name="${env:APPVEYOR_REPO_BRANCH}" --body="${env:COMMIT_LOG}" "releases/${env:RELEASE}-win32-x64.exe"
        }
      }

test: off

# Packaging artifacts
# https://www.appveyor.com/docs/packaging-artifacts
artifacts:
  - path: 'releases\*.exe'

# Publishing artifacts to GitHub Releases
# https://www.appveyor.com/docs/deployment/github
deploy:
  provider: GitHub
  auth_token:
    secure: IZ0tfrzBdm07S3zt3Hli+p1BbHkTJf4SfZMH2VcOU7k89lpOFyAolYf7zID6VKSJ
  artifact: /.*\.exe/
  draft: false
  prerelease: false
  on:
    appveyor_repo_tag: true  # deploy on tag push only
    nodejs_version: "4"
