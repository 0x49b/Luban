#!/usr/bin/env node

var path = require('path');
var program = require('commander');
var pkg = require('../package.json');

// Defaults to 'production'
process.env.NODE_ENV = process.env.NODE_ENV || 'production';

// Change working directory to 'dist/app'
process.chdir(path.resolve(__dirname, '../dist/app'));

function increaseVerbosityLevel(val, total) {
    return total + 1;
}

function parseMountPoint(val) {
    val = val || '';

    if (val.indexOf(':') >= 0) {
        var r = val.match(/(?:([^:]*)(?::(.*)))/);
        return {
            url: r[1] || '/static',
            path: r[2]
        };
    }

    return {
        url: '/static',
        path: val
    };
}

program
    .version(pkg.version)
    .usage('[options]')
    .option('-p, --port <port>', 'set listen port (default: 8000)', parseInt, 8000)
    .option('-H, --host <host>', 'set listen address or hostname (default: 0.0.0.0)', '0.0.0.0')
    .option('-b, --backlog <backlog>', 'set listen backlog (default: 511)', parseInt, 511)
    .option('-c, --config <filename>', 'set config file (default: ~/.cncrc)')
    .option('-v, --verbose', 'increase the verbosity level', increaseVerbosityLevel, 0)
    .option('-m, --mount [<url>:]<path>', 'set the mount point for serving static files (default: /static:static)', parseMountPoint, { url: '/static', path: 'static' })
    .parse(process.argv);

var app = require('../dist/app');
app.run({
    port: program.port,
    host: program.host,
    backlog: program.backlog,
    config: program.config,
    verbose: program.verbose,
    mount: program.mount
});
