#!/usr/bin/env node

process.env.NODE_ENV = process.env.NODE_ENV || 'production';

var _ = require('lodash');
var fs = require('fs');
var path = require('path');
var webappengine = require('webappengine');
var program = require('commander');
var pkg = require('../package.json');
require('colors');

function increaseVerbosityLevel(val, total) {
    return total + 1;
}

program
    .version(pkg.version)
    .usage('[options]')
    .option('-a, --web-assets <path>', 'web assets directory')
    .option('-p, --port <port>', 'set listen port (default: 8000)')
    .option('-H, --host <host>', 'set listen address or hostname (default: 0.0.0.0)')
    .option('-b, --backlog <backlog>', 'set listen backlog (default: 511)')
    .option('-c, --config <filename>', 'set config file (default: ~/.cncrc)')
    .option('-v, --verbose', 'increase the verbosity level', increaseVerbosityLevel, 0)
    .parse(process.argv);

var settings = require('../dist/app/config/settings');

// Overrides defaults
_.set(settings, 'port', program.port || settings.port);
_.set(settings, 'host', program.host || settings.host);
_.set(settings, 'backlog', program.backlog || settings.backlog);

if (program.verbose === 1) {
    _.set(settings, 'verbosity', 1);
    _.set(settings, 'winston.level', 'debug');
}
if (program.verbose === 2) {
    _.set(settings, 'verbosity', 2);
    _.set(settings, 'winston.level', 'trace');
}

{ // Load configuration settings
    var cncrc = settings['cncrc'];

    if (program.config) {
        cncrc = path.resolve(program.config);
    }

    try {
        var cnc = JSON.parse(fs.readFileSync(cncrc, 'utf8'));
        if (!(_.isObject(cnc))) {
            console.log('Check your configuration file to ensure it contain valid settings.'.bold.red);
            console.log(cnc);
            process.exit(1);
        }
        settings['cncrc'] = cncrc;
        settings['cnc'] = _.extend({}, settings['cnc'], cnc);
    }
    catch(err) {
    }
}

require('..');
