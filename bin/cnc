#!/usr/bin/env node

process.env.NODE_ENV = 'production';

var _ = require('lodash');
var path = require('path');
var webappengine = require('webappengine');
var program = require('commander');
var pkg = require('../package.json');
var settings = require('../app/config/settings');
var server = require('../server');
require('colors');

program
    .version(pkg.version)
    .usage('[options]')
    .option('-p, --port <port>', 'set listen port (default: 8000)')
    .option('-H, --host <host>', 'set listen address or hostname (default: 0.0.0.0)')
    .option('-b, --backlog <backlog>', 'set listen backlog (default: 511)')
    .option('-c, --config <filename>', 'set config file (default: ~/.cncrc)')
    .parse(process.argv);

// Overrides defaults
_.set(settings, 'port', program.port || settings.port);
_.set(settings, 'host', program.host || settings.host);
_.set(settings, 'backlog', program.backlog || settings.backlog);

// Set configuration settings
if (program.config) {
    var cncrc = path.resolve(program.config);
    var cnc = require(cncrc);
    if ( ! _.isObject(cnc)) {
        console.log('Check your configuration file to ensure it contain valid settings.'.bold.red);
        console.log(cnc);
        process.exit(1);
    }

    settings['cncrc'] = cncrc;
    settings['cnc'] = _.extend({}, settings['cnc'], cnc);
}

var options = {
    port: settings.port,
    routes: [
        {
            type: 'server',
            route: '/',
            // An absolute path is recommended to use
            server: path.resolve(__dirname, '../app/app')
        }
    ]
};

webappengine(options)
    .on('ready', server);
