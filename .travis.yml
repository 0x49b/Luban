osx_image: xcode7.3

sudo: required
dist: trusty
group: edge

services:
  - docker

language: node_js

os:
  - linux
  - osx

node_js:
  - '4'
  - '5'

env:
  global:
    - secure: "KPf6trtYLBDc2S/fF7H4VkNOAQ2Gc9sFj3v8aHOhNWDagACEHaPjIZdr3MGmzXji2EyQqtm6SxBxzdMbe1BNY5GRALgGI2fSyra+VwjhUeOB/UJ8oZuxhqnywbF77lbZgUYK/kOWHgCKGQxRsVZyytgK2CihOwPwzSp/CWUhBjlyjtDpUOMJXfc0USg05imR9LcwdW9o84uXGyI3XwHhqsA5szlu09Oxz+O//TMCHobb8o9b13N8Oxhdu9mgzynXCEo7TG4rwbmx2t7ymfM0TfEqfEsOOQ/A7iPJ4lxQ+FKGoKaqfITuZtUmzd4RaCK8zRVg/dYbXX2qF/RWRBKwIAfBLNLYYdFxleaBaNgGGyQw8TpNkm80u5ilmIDCrw79m0MqePZXcL4pdfRC9PBE2PO55tX/Podhk9HKovixvB4qxUj3Y45ORtSE2TO78W3Cs54JTQVNh4xz8Tzp67DWwNXN5XnwkVyvRugaCHV1gUuJWuJTUr6Bdoad9vid+GUKqNoBlTTgkjfc0/TDSuDFnAbnhdga4xFoFLnpTDpCaZrr1NWfhVCepGqY7I4qLcie/Bobpr6n8UuBRg6devdcBZJxAYKyC4SkfqfkJe36TmTViz7GCs698CAPteJ2ypifeERT9zYu0JYeofEi49bPxevaaFICxzUE2WIAlGeGIw0=" # DOCKER_EMAIL
    - secure: "Xh5xnUckiGwr3pcl44c8A91p2AyhJXMpGzDPpTk+63ZeM0nDnUh1/1StqW+5Bfx24MI6HtkOiGa7zTn8HbDMWXVN7s+eZ0eC28GI63EsKyivsMyylR+mwMKsAHcxbfZvFaDJiYE/s1FXXVdIr3PpNVxlncbuZiTQ+i+sr4iD+B14UV+GTwgbpyNEF2jSK+MlV0XAn6AK4kc6fd3Zx2guG9Kv8slwFcK7Kwjpa4C+t0ZX85wiqlPBhC42nhx6eRUwWbf/4rySd/4RhHXan+zsBWBjUHLhjzMvwsahqPg0yBzkFoZ3ozUQqv9NhmyjEANCAAj1vcOoFZ0nikgfR1WqeMEcKfTFbV0QVfqnEyYHN2ZUmvOzv2gih26gHaY7E2Dte6u96CSv5TgwYtiCBZzc0vHO8p2+heLfourhqdQhanElq4nthBffKJled5dOcq6UAINK85ZwzS+7EZG79idGETR7vvCiaLLuhCn4kFdo1fLOCTQ+FJAOYw3uSk6n1YlNbxNJ7RwykgRB/9MgbJHc9o67C/Y3NEzBRErSctqfZ9Rg6gICM8dkwoBh0652FDn4E/TCkpfKbpTkRkJoFzRxe9joFTYvkt+fIYwokyajgt/qlpb6XQiFiUqdlWcWcYDNbBSnIMfH4L61ktMtCCcv85Iw98d1bxi93r/UdyhWOuQ=" # DOCKER_USER
    - secure: "vthH2fNi44W4+21OxLnmeb41y9T+v5p4vpWgj5DG/LuVfJNw5fNvnitXdwe3UR0EQCvH0ow4mn4I2avqvn5G6PSDmgpzTHcw8OJt/cGhXXsN629tdccG+rHG8xFneRACnSJOmZ3rU038igAlZt7PdraM68ZVdwZfXEDua06qb4FODBWNZtiUJ89AyYib5DoYjde18sEHqNZEp1ruhcfZArzexnxJ7G63Qe3SmxBS5Z7jC18sGyTI3FbUyKUlqYsxG8rcqTy5QOKa6Y0P1TPPHmr517uO4YfxhQX6Lcrn+DgvHH/n6pzlBeGgXm5XZB+MN6iRM8NRo1VmQ8Ecm3sFb6UZvESB0wx3EI5DPde/rxE6fwhTP/d+95qSrZUvuqLOGfa6Zb5JsgKzK4St2EVb6hs5qqTnIifGZQZ4NJrhTe737kE4FsJbK8dQmNMwMlNVbCmnYeZmWh3aJgXp4fjk/RyomFvfGLjNchVIM6iZw2DlqLJm2Wl4Dsb1blj4tfuL0+UlA9YiF2V6ycn5sWdq5JiGsWhkyARnCiSFc5lu6TbvKt8k5CQIwZXshoKyv8IIQkEubGVQRI9D8nDrgrbOt8+lIEU6Ibfbi1CzuPpv95GodWLCEyf6KXf8EHr+tEbKPwpbNzIsPWEqMuPQ6F3AWtGnuuAvfLm/5+/OXNKxT3o=" # DOCKER_PASS
    - secure: "wfMu1Zs0mIriCTGEi9vc/3QVOsr6JsGmdw9p1JkNL/GyTCOUlpCY2Om3jKaoZsV6QfhpaPif8iTk5kH2+DWZq+PtQhlq+XdaUyBxs97/7W/0XtlhWDzVZTxEYXHE3g29+Yetyfep0y630YY9qSGSulVUUOwzgdr0bb0JZct6ojpuRMHuLpVJL/eW+hnIHLA3WLUmHNT9XLQ8o6niZAnefzXeeZco3eZKk639ptohTJ4R/9lzxLRegVwko7AX++o5oM8Mogd7fMHeD4ILssKYbslurNU5OkeEmjggU8O+00Y2J8iLS7G77o8zgyoQ8EJrT9TORyghliB8hUmIwa8CQKmkZZFf4xONbXOEY8ocUsXRinUXRiUzEWTziyTTZa5jYJWXINXCzOZLskCdvD09YLr0PS4aCBCzHdnd1XFfzq7Q8ML9ebV7Jw6GrrxRMRkQRWkd4zbC1OAP4Mft8cicLqlTJO8q/KSa4P1tOVoZyjUTHQLe5Z/mMAFZUIwfN4fHE0/sJDe4XJnjOcBfRUdORVc1Hj3JRd55TxACOUWwKbdXpYXu5KTxZGR/BjDB5eMSXf4mWC8nXD28yNGCeb+Te9NClFJWkqoiXWH9affNbk6eCsSNbDAH6NtHqFp51UDJHBig+zEyDL9KNaw9FXSNcFg4vltmZYLiP97NB6woyqQ=" # GITHUB_TOKEN
    - secure: "BHPlvBZpC5dQGrCX7mmJgnQASUfnMko9IFVOVPCk9NZP08N0nElNRKQ8WBFZr3jpL/i+tapwiYcbUMoK3z0xkRKhTo5Esl3pToPkGNvpKlN23GsyKBP+KdRJAGTFfhz8o9NkviKPcMjFRqOyc/0hsOBAb8Pp9t7z1JeXLjLDIFD43kektWJylNjQHyK0KKnL0f2vyJEhedAsddHru4TQg52BuLZGxuZb8cziFkfaokObdrwe5XGTu7IL7Vs+MDIzstp+8cBzqaNmcYGALzULEDxIfWtwWjQdZHnZzyfmWDoTxf19TjXTyebmtFWDf5aCXZXd/Un+1bq3D41PbOmNmq26MS95y9GclmZxRD3VMB3Sg1ZWlp8E6UN6jzmS45pMy0msLoZv/I7ile0CElr1dWww1oG8bKnlfUv+aSGL+A0NSRnp5v4JpmqIpF9AQaz/rWpYslyoVwK8t4/abfcSZtexga2d018nnLu7q5J2uM766Kpvc5RH8k4hX9/ar6Gy5s+nmum9a5DDncLlOcQCO8r2kQKRgJ+2Daw1+A+PTSpwWoqCo/SxZ4EumxPUYKsnk15PAxgNTXua3KdZRt2ZIqNxJp08dnr9bS/hRAY20mCpbLKEfIOSx//muKDgFvPVLsIq1U9mMs5WtDr8rov+CBQOmV069EJSjz09HmeLFD8=" # CSC_LINK
    - secure: "LenBHoTcLW6cF7ML3+dB7JICMzEkawrJHiqFcGSo+hgapB0NCHGUiihr2zrjGSlHmElPiQ2TCnCRmPvOzVfpZswg36D0+1niPgZ+0vfGfPEoPmHhlvIsMPLb7v0lCIeh8z2o9eNbSvnv6NRXS4o5NLlHzM+RhAYARSXvRmFxqCCBn1Sj9pB5TB9NX3mK0Lb3mEJcIgEVFBr/xLiISPUBGFmncHUpxYjZHwxXQXRcGyfOEphLM9tvmEdoILRxM67k035csAIeaLKKPJcMGmO0e/JwZacQN7s3MhD2M8NddhQvWklNjabXAJ0L9Ycujf6rI5RsGcZL2U80HKr0aYRMiVW7/MPMpLARFOUoLfuFAXKkkLHp7Lbb1W6Zftr4yxkrfDXIQsh976HkBj+czr6wGwzBwb39zX4KEm/Yc3TEIxC/kKs9bt+vVW6BG+J41neiDiuIY1D1tRA0OEq0j04zpU6n683ojfYddzFoUWCN+TB3i0HQxWsKTOGKdcQwrJs7xZ4//UzD/vOTHj18SH0nm6ImF2/7q+9wJO646gHWTGTjGFYdupuR402wb3h5vWmGfFRvX6B1QtYImmEwMFnqf2XRwTTSz3niKn2Rt1YUiCP5bEz+Dcr+e+A8Jidt6ZuJEXv5SbykTG4YBmgCuuFT5KRwv08kule7FiUtQ2KD5XE=" # CSC_KEY_PASSWORD

cache:
  directories:
    - node_modules
    - $HOME/.electron

addons:
  apt:
    packages:
      - icnsutils
      - graphicsmagick
      - gcc-multilib
      - g++-multilib

before_install:
  - git --version
  - git config --global user.name "Travis CI"
  - git config --global user.email "travis@travis-ci.org"
  #
  # https://github.com/electron-userland/electron-builder/wiki/Multi-Platform-Build#os-x
  #
  # Use brew to install required packages.
  #
  # To build app in distributable format for Windows on OS X:
  # $ brew install Caskroom/cask/xquartz wine mono
  #
  # To build app in distributable format for Linux on OS X:
  # $ brew install ruby gnu-tar libicns graphicsmagick
  #
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
    fi
  # npm v3
  - npm install -g npm

install: travis_wait npm install

script:
  - |
    if [[ -z "$TRAVIS_TAG" ]]; then
      npm run build-latest
    else
      npm run build
    fi

after_success:
  - mkdir -p releases
  - PACKAGE_NAME=`scripts/package-name.sh src/package.json`
  - PACKAGE_VERSION=`scripts/package-version.sh src/package.json`
  - RELEASE=${PACKAGE_NAME}-${PACKAGE_VERSION}
  - COMMIT_LOG=`git log -1 --date=iso`
  - |
    # cncjs-darwin-x64
    if [[ "$TRAVIS_NODE_VERSION" == "4" && "$TRAVIS_OS_NAME" == "osx" ]]; then
      security import "scripts/certs/Certum-Code-Signing-CA-SHA2.cer" -k ~/Library/Keychains/login.keychain -T /usr/bin/codesign;
      npm run build:darwin-x64;
      ls -al output output/*;
      cp -af "output/cnc-darwin-x64/${RELEASE}.dmg" "releases/${RELEASE}-osx-x64.dmg";
      cp -af "output/cnc-darwin-x64/${RELEASE}-mac.zip" "releases/${RELEASE}-osx-x64.zip";
      if [[ -z "$TRAVIS_TAG" ]]; then
        npm run github-release -- \
          --owner=cheton \
          --repo=cnc \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-osx-x64.dmg";
        npm run github-release -- \
          --owner=cheton \
          --repo=cnc \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-osx-x64.zip";
      fi
    fi
  - |
    # cnc-linux-ia32
    if [[ "$TRAVIS_NODE_VERSION" == "4" && "$TRAVIS_OS_NAME" == "linux" ]]; then
      npm run build:linux-ia32;
      ls -al output output/*;
      cp -af "output/${RELEASE}-i386.deb" "releases/${RELEASE}-linux-i386.deb";
      pushd releases;
      ln -sf ../output/cnc-linux-ia32 "${RELEASE}-linux-ia32";
      tar zcfh "${RELEASE}-linux-ia32.tar.gz" "${RELEASE}-linux-ia32";
      rm -f "${RELEASE}-linux-ia32";
      popd;
      if [[ -z "$TRAVIS_TAG" ]]; then
        npm run github-release -- \
          --owner=cheton \
          --repo=cnc \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-linux-i386.deb";
        npm run github-release -- \
          --owner=cheton \
          --repo=cnc \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-linux-ia32.tar.gz";
      fi
    fi
  - |
    # cnc-linux-x64
    if [[ "$TRAVIS_NODE_VERSION" == "4" && "$TRAVIS_OS_NAME" == "linux" ]]; then
      npm run build:linux-x64;
      ls -al output output/*;
      cp -af "output/${RELEASE}-amd64.deb" "releases/${RELEASE}-linux-amd64.deb";
      pushd releases;
      ln -sf ../output/cnc-linux-x64 "${RELEASE}-linux-x64";
      tar zcfh "${RELEASE}-linux-x64.tar.gz" "${RELEASE}-linux-x64";
      rm -f "${RELEASE}-linux-x64";
      popd;
      if [[ -z "$TRAVIS_TAG" ]]; then
        npm run github-release -- \
          --owner=cheton \
          --repo=cnc \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-linux-amd64.deb";
        npm run github-release -- \
          --owner=cheton \
          --repo=cnc \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-linux-x64.tar.gz";
      fi
    fi
  - |
    # docker image
    if [[ "$TRAVIS_NODE_VERSION" == "5" && "$TRAVIS_OS_NAME" == "linux" ]]; then
      scripts/travis-docker-build.sh;
    fi

before_deploy:
  - echo "Deploying to GitHub releases"
  - ls -al releases/
deploy:
  provider: releases
  api_key:
    secure: "x9nz3bvNesYVCesjj36yFYlYIAVykchBR4Ffzzysd4Tk1v+0eh0mRc9jmTzfF7xYsAjpKRCMGCjWG39aPwVG7rbs0EZDrXVxT7KObZ31HS9A1VWkOs/LKAlDrwjylx4umNswmVWAW+pVr9N431Be21+mZg4Xu8z6iDnLgHWxhK9n2IewKanPVV3pbB6hNVKpshnbYMraqwnJQE4gOVhBc2EBHUAUIhtVN1ntmRL76+trlpPFTzbhBVywf0TRvW4J67wYQO0was/qRww+wKmUvymD+7vk8P/23+uVi9pDpUix2TMZfyCPUG1PpQ0cZfIaaUg4POQD3hqFCJGeAgxZzIPEHOVd+TLF+B2eZjSMlTDyrVI2+JzVwx9SIPBkLgsRy1xNGFfMHXidJGOnkG9efv2artjkNblx3SGkx9EgAd1fsfM/epvggaJvW3rsU0AlRN9IKOeHToYVkWGJIJNjFGt1AL7a98SvtQ56xsXocUeLjLRnh14VFxZ22IeBRClOpyMGVLuTBy+m4hJMSB8JbjdBkJW45Ou6Pdswt5cW6WWXM1sepmxjttStp0FyiOr0qCkQfJsEEg1fYF0Rj7zNfUTFlRCX9+JWhQ/Lb61kEsBjqKc7/lPFOiKB/iLkQo+gQNb5ToaQMZIK0vmYf4gZZ6tkFkicbp8JjZu6mlNKdSE="
  file_glob: true
  file:
    - 'releases/*.*'
  overwrite: true
  skip_cleanup: true
  on:
    # https://docs.travis-ci.com/user/deployment#Conditional-Releases-with-on
    tags: true  # Deploy app only when a tag is applied to the commit
    node: '4'
